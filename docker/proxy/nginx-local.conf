worker_processes auto;
rtmp_auto_push on;
events {}
rtmp {
    server {
        listen 1935;
        listen [::]:1935 ipv6only=on;    
        chunk_size 4096;

        application src {
            live on;
            record off;
            
            # ffmpeg으로 직접 해상도 분리 및 hls 저장
            exec_push ffmpeg -i rtmp://localhost:1935/$app/$name -async 1 -vsync -1
              -c:v libx264 -c:a aac -ar 48000
              -map 0:v -map 0:a -map 0:v -map 0:a -map 0:v -map 0:a
              -b:v:0 5000k -maxrate:v:0 5000k -bufsize:v:0 10000k -s:v:0 1920x1080 -crf:v:0 15 -b:a:0 128k
              -b:v:1 2500k -maxrate:v:1 2500k -bufsize:v:1 5000k -s:v:1 1280x720 -crf:v:1 22 -b:a:1 128k
              -b:v:2 1000k -maxrate:v:2 1000k -bufsize:v:2 2000k -s:v:2 640x360 -crf:v:2 28 -b:a:2 96k
              -f hls -var_stream_map "v:0,a:0,name:1080p v:1,a:1,name:720p v:2,a:2,name:360p"
              # -hls_playlist_type vod
              -hls_flags independent_segments
              -master_pl_name master.m3u8 -hls_time 1 -hls_list_size 0
              -hls_segment_filename "/tmp/hls/$name/res_%v/file_%03d.ts" "/tmp/hls/$name/res_%v/playlist.m3u8";
              # -progress - -nostats -v quiet
              # http://server:3000/rtmp-stream/hls/$name/out_%v.m3u8;
        }
    }
}

http {
    server {
        listen 8080;

        root /tmp;

        location /hls {
            # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            add_header Cache-Control no-cache;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Expose-Headers' 'Content-Length';
        }
    }
}